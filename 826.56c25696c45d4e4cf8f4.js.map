{"version":3,"sources":["webpack://boids-wasm/./src/boids-wasm/boids_wasm_bg.js"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","takeObject","ret","dropObject","boids_config","boids_initialize","obstacle_data","boids_data","config","Boids","__wrap","Object","create","prototype","this","delta_time","BoidsConfig","__wbindgen_json_parse","arg0","arg1","JSON","parse","__wbindgen_json_serialize","ptr0","stringify","len0","__wbindgen_object_drop_ref","__wbg_new_59cb74e423758ede","Error","__wbg_stack_558ba5917b466edd","stack","__wbg_error_4bb6c2a97407129a","console","error","__wbindgen_throw"],"mappings":"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","file":"826.56c25696c45d4e4cf8f4.js","sourcesContent":["import * as wasm from './boids_wasm_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @returns {any}\n*/\nexport function boids_config() {\n    var ret = wasm.boids_config();\n    return takeObject(ret);\n}\n\n/**\n* @param {any} obstacle_data\n* @param {any} boids_data\n* @param {any} config\n* @returns {Boids}\n*/\nexport function boids_initialize(obstacle_data, boids_data, config) {\n    var ret = wasm.boids_initialize(addHeapObject(obstacle_data), addHeapObject(boids_data), addHeapObject(config));\n    return Boids.__wrap(ret);\n}\n\n/**\n*/\nexport class Boids {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Boids.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_boids_free(ptr);\n    }\n    /**\n    * @param {number} delta_time\n    * @returns {any}\n    */\n    boids_iteration(delta_time) {\n        var ret = wasm.boids_boids_iteration(this.ptr, delta_time);\n        return takeObject(ret);\n    }\n    /**\n    * @param {any} config\n    */\n    update_config(config) {\n        wasm.boids_update_config(this.ptr, addHeapObject(config));\n    }\n    /**\n    * @param {any} obstacle_data\n    */\n    update_obstacles(obstacle_data) {\n        wasm.boids_update_obstacles(this.ptr, addHeapObject(obstacle_data));\n    }\n    /**\n    * @param {any} boids_data\n    */\n    update_boids(boids_data) {\n        wasm.boids_update_boids(this.ptr, addHeapObject(boids_data));\n    }\n}\n/**\n*/\nexport class BoidsConfig {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_boidsconfig_free(ptr);\n    }\n}\n\nexport const __wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_json_serialize = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"sourceRoot":""}